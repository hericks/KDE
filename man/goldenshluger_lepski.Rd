% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/goldenshluger_lepski.R
\name{goldenshluger_lepski}
\alias{goldenshluger_lepski}
\title{Goldenshluger-Lepski Method}
\source{
\href{https://spartacus-idh.com/030.html}{Nonparametric Estimation},
Comte [2017], ISBN: 978-2-36693-030-6
}
\usage{
goldenshluger_lepski(
  kernel,
  samples,
  bandwidths = logarithmic_bandwidth_set(1/length(samples), 1, 10),
  kappa = 1.2,
  subdivisions = 1000L
)
}
\arguments{
\item{kernel}{S3 object of class \code{\link{Kernel}}; the kernel to use for
the estimator}

\item{samples}{numeric vector; the observations.}

\item{bandwidths}{strictly positive numeric vector; the bandwidth set from
which the bandwidth with the least estimated risk will be selected.}

\item{kappa}{numeric scalar greater 1; a tuning parameter.}

\item{subdivisions}{positive numeric scalar; subdivisions parameter
internally passed to \code{\link{integrate_primitive}}.}
}
\value{
The estimated optimal bandwidth contained in the bandwidth set.
}
\description{
The Goldenshluger-Lepski method is used to estimate an optimal
bandwidth for kernel density estimation from a given set of bandwidths.
}
\details{
The Goldenshluger-Lepski method aims to minimize an upper bound for
the mean integrated squared error (MISE) of a kernel density estimator. The
MISE is defined as the expectation of the squared L2-Norm of the difference
between estimator and (unknown) true density.

This methods works with the popular bias-/variance-decomposition. A
double-kernel approach is used for an estimator of the bias term as it
still depends on the unknown density.

The estimator used for an upper bound of the variance depends on the tuning
parameter \code{kappa}. The recommended value for \code{kappa} is 1.2.

Subsequently the bandwidth with the minimal associated risk is selected.
}
\seealso{
\code{\link{kernel_density_estimator}} for more information about
kernel density estimators, \code{\link{pco_method}} and
\code{\link{cross_validation}} for more automatic bandwidth-selection
algorithms.
}
