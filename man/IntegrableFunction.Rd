% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/integrable_function.R
\name{IntegrableFunction}
\alias{IntegrableFunction}
\title{Integrable Functions}
\usage{
IntegrableFunction(fun, support = NULL, subdivisions = 100L)
}
\arguments{
\item{fun}{an \code{R} function taking a single numeric argument and
returning a numeric vector of the same length: see 'Details'.}

\item{support}{a numerical vector of length 2 containing the lower- and
upperbound in the first and second entry respectively.
\code{IntegrableFunction} will try to find bounds on the support itself if
\code{NULL} is passed.}

\item{subdivisions}{a integer vector of length 1, used for the subdivisions parameter for the function \code{\link[stats::integrate]{integrate}}.}
}
\description{
Many functions of the KDE package work with densities and
kernels, which are integrable (see: 'Details' for exact requirements). The
S3 class \code{IntegrableFunction} tries to ensure some of the properties
of integrable functions and serves as superclass for the
more specific S3 classes \link{Density} and \link{Kernel}.
}
\details{
Integrable functions as \code{R} functions are required to
\enumerate{
\item be vectorised in its argument, taking a single numeric argument,
returning a numerical vector of the same length only
\item return zero for inputs outside their support
\item can be integrated over their support using \code{integrate} without
throwing an error
}

The functions in this package don't just take \code{R} functions satisfying
these conditions, but objects of S3 class \code{IntegrableFunction} (or one
of its subclasses \code{Kernel}, \code{Density}).

The S3 class \code{IntegrableFunction} exists to ensure some of the most
basic properties of integrable functions. The class is build on lists
containing two named entries \code{fun} and \code{support}
\itemize{
\item \strong{\code{fun}} is an \code{R} function (the represented function) taking
a single numeric argument and returning a numeric vector of the same
length. This function should return zero outside of the interval given in
the \code{support} entry.
\item \strong{\code{support}} is a numeric vector of length 2 containing a lower-
and upperbound for the support of the function stored in \code{fun} in its
first and second entry respectively. In particular the values \code{-Inf}
and \code{Inf} are allowed.
\item \strong{\code{subdivisions}} is a integer value used for the subdivisions parameter for \code{\link[stats:integrate]{integrate}}.
The function \code{fun} is needed to be integrated using \code{\link[stats:integrate]{integrate}}.
Because of that, the subdivisions parameter is required to be large enough, such that \code{\link[stats:integrate]{integrate}} can work properly.
The default value is set to 100L. Be aware that too large numbers can cause long runtimes!
}

The constructor \code{IntegrableFunction} tries to construct a valid
\code{IntegrableFunction} object based on the passed arguments. Returned
objects are guaranteed to pass the validator \link{validate_IntegrableFunction}
(\bold{Attention:} This does not guarantee the conditions in the first
'Details' paragraph: see \link{validate_IntegrableFunction}.).
}
\seealso{
\itemize{
\item \code{\link[KDE:Kernel]{Kernel}} for more information about
Kernel. * \code{\link[KDE:Density]{Density}} for more information about
Density.
}
}
